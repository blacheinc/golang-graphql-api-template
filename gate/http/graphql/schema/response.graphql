type Response {
  message: String!
}

type Pagination {
  page: Int!
  limit: Int!
  pages: Int!
}

type ResponseWithBase {
  message: String!
  data: Base
}

type ResponseWithAddress {
  message: String!
  data: Address
}

type ResponseWithSecuritySetting {
  message: String!
  data: SecuritySetting
}

type ResponseWithWallet {
  message: String!
  data: Wallet
}

type ResponseWithWallets {
  message: String!
  data: [Wallet]
}

type ResponseWithUser {
  message: String!
  data: User
}

type ResponseWithUsers {
  message: String!
  data: [User]
  "only returned when paginate is true"
  pagination: Pagination
}

type ResponseWithAnything {
  message: String!
  data: Any!
}

type ResponseWithTransaction {
  message: String!
  data: Transaction
}

type ResponseWithTransactions {
  message: String!
  data: [Transaction]
  "only returned when paginate is true"
  pagination: Pagination
}

union Respond = Error | Response
union RespondWithBase = Error | ResponseWithBase
union RespondWithAddress = Error | ResponseWithAddress
union RespondWithWallet = Error | ResponseWithWallet
union RespondWithWallets = Error | ResponseWithWallets
union RespondWithSecuritySetting = Error | ResponseWithSecuritySetting
union RespondWithUser = Error | ResponseWithUser
union RespondWithUsers = Error | ResponseWithUsers
union RespondWithAnything = Error | ResponseWithAnything
union RespondWithTransaction = Error | ResponseWithTransaction
union RespondWithTransactions = Error | ResponseWithTransactions
