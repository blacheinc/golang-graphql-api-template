package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.33

import (
	graphql1 "blacheapi/http/graphql"
	"blacheapi/http/graphql/model"
	"context"
)

// Pong is the resolver for the pong field.
func (r *mutationResolver) Pong(ctx context.Context, input interface{}) (model.Respond, error) {
	return model.Response{Message: "configure.Blache()"}, nil
}

// Ping is the resolver for the ping field.
func (r *queryResolver) Ping(ctx context.Context) (model.Respond, error) {
	return model.Response{Message: "configure.Blache()"}, nil
}

// Mutation returns graphql1.MutationResolver implementation.
func (r *Resolver) Mutation() graphql1.MutationResolver { return &mutationResolver{r} }

// Query returns graphql1.QueryResolver implementation.
func (r *Resolver) Query() graphql1.QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
